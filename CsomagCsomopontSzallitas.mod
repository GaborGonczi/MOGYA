/*
csomagokat szeretnénk szállítani bizonyos csomópontokra bizonyos számú napon keresztül.
Tudjuk hogy melyik nap mennyi szabadidõnk van
A csomagszállítást úgy valósítjuk meg hogy minden nap pontosan egy útvonalat teljesítünk amivel érintünk bizonyos csomópontokat ahová a csomagokat szállítjuk. Minden útvonalról tudjuk, hogy mennyi idõbe telik végigmenni rajta
Minden csomagnak van tömege. Az elszállított csomagok össztömege nem haladhatja meg a szállítási kapacitásunkat
Minden csomagnak tudjuk a célállomását az érkezési idejét(hányadik nap) ennél korábban nem szállíthatjuk ki az adott csomagot, a szállítási határidejét(hányadik nap) és azt hogy ha teljesítjük a csomag határidõre történõ szállítását akkor mennyi profitra teszünk szert. Célunk a legtöbb profitra szert tenni

*/
/*Deklarációk*/
param napokSzama;
set napok:=1..napokSzama;
param szabadIdo{napok};
param csomoPontokSzama;
set csomoPontok:=1..csomoPontokSzama;
param utVonalakSzama;
set utVonalak:=1..utVonalakSzama;
param rajtaVanE{csomoPontok,utVonalak} binary;
param beJarasiIdo{utVonalak};
param csomagokSzama;
set csomagok:=1..csomagokSzama;
param tomeg{csomagok};
param szallitasiKapacitas;
param celAllomas{csomagok};
param beErkezesiIdo{csomagok};
param kiSzallitasiHatarIdo{csomagok};
param profit{csomagok};

var kiSzallitjukE{csomagok,napok} binary;
var valasztomE{utVonalak,napok} binary;
#Korlátozások
s.t. mindenNapPontosanEgyUtvonal {n in napok}:
	sum{u in utVonalak} valasztomE[u,n]=1;
	
s.t. mindenCsomagMaximumEgyszer {cs in csomagok}:
sum{n in napok} kiSzallitjukE[cs,n]<=1;

s.t. neLepjukTulASzallitasiKapacitast {n in napok}:
sum{cs in csomagok} kiSzallitjukE[cs,n]*tomeg[cs]<=szallitasiKapacitas;


s.t. NemValsztjukAzUtatHaNincsElegSzabadidonk{u in utVonalak,n in napok}:
	valasztomE[u,n]*beJarasiIdo[u]<=szabadIdo[n];

s.t. NemSzallithatoAmigNemErkezikBe {cs in csomagok, n in napok:n<beErkezesiIdo[cs]}:
	kiSzallitjukE[cs,n]=0;

s.t. NemSzallithatoHatarIdonTul {cs in csomagok, n in napok:n>kiSzallitasiHatarIdo[cs]}:
	kiSzallitjukE[cs,n]=0;



s.t. haNincsRajtaACelallomasNemTudomKiszallitani1 {cs in csomagok, n in napok}:
# if valasztomE[u,n]==1 rajtaVanE[csp,u]==0 ==> kiSzallitjukE[cs,n]==0
kiSzallitjukE[cs,n]<=1-sum{csp in csomoPontok,u in utVonalak:rajtaVanE[csp,u]==0} valasztomE[u,n]; # ezt a korlátozást a bringafutár videó alapján írtam föl



maximize totalProfit: sum{n in napok,cs in csomagok} kiSzallitjukE[cs,n]*profit[cs];

data;

param napokSzama:=20;
param csomoPontokSzama:=6;
param utVonalakSzama:=4;
param szabadIdo:=
1	5
2	10
3	4
4	10
5	10
6	5
7	5
8	5
9	4
10	3
11	5
12	5
13	5
14	7
15	2
16	10
17	7
18	6
19	10
20	6
;
param beJarasiIdo:=
1	4
2	7
3	6
4	3
;
param rajtaVanE:
						1	2	3	4:=
					1	1	0	0	1
					2	1	1	1	0
					3	0	1	0	1
					4	0	0	0	1
					5	1	0	1	1
					6	1	1	0	0
;
param csomagokSzama:=200;
param tomeg:=
1	7
2	4
3	3
4	10
5	14
6	13
7	8
8	7
9	2
10	15
11	6
12	8
13	7
14	9
15	14
16	9
17	7
18	1
19	13
20	15
21	3
22	4
23	4
24	10
25	14
26	9
27	1
28	10
29	5
30	10
31	9
32	12
33	8
34	4
35	6
36	7
37	7
38	8
39	8
40	9
41	9
42	9
43	4
44	4
45	8
46	13
47	9
48	1
49	10
50	3
51	13
52	13
53	10
54	3
55	11
56	5
57	15
58	3
59	12
60	8
61	5
62	12
63	2
64	15
65	9
66	1
67	12
68	2
69	8
70	14
71	1
72	2
73	13
74	12
75	12
76	14
77	11
78	13
79	11
80	9
81	4
82	4
83	10
84	13
85	7
86	8
87	1
88	14
89	7
90	10
91	13
92	11
93	8
94	12
95	12
96	9
97	13
98	13
99	2
100	6
101	15
102	9
103	2
104	3
105	4
106	2
107	1
108	1
109	6
110	6
111	5
112	8
113	13
114	10
115	1
116	12
117	7
118	14
119	4
120	13
121	7
122	14
123	7
124	12
125	2
126	9
127	15
128	1
129	8
130	11
131	5
132	3
133	2
134	11
135	1
136	1
137	2
138	10
139	10
140	3
141	15
142	14
143	2
144	5
145	4
146	8
147	1
148	14
149	9
150	5
151	7
152	4
153	6
154	14
155	3
156	7
157	8
158	8
159	11
160	10
161	2
162	11
163	8
164	3
165	4
166	4
167	3
168	15
169	13
170	4
171	13
172	8
173	11
174	10
175	8
176	2
177	15
178	1
179	15
180	13
181	8
182	15
183	12
184	14
185	11
186	14
187	8
188	15
189	12
190	11
191	15
192	14
193	5
194	11
195	4
196	9
197	11
198	8
199	13
200	5
;
param szallitasiKapacitas:=15;

param beErkezesiIdo:=
1	16
2	8
3	8
4	2
5	19
6	6
7	17
8	17
9	19
10	9
11	2
12	11
13	10
14	14
15	15
16	7
17	4
18	18
19	5
20	11
21	3
22	1
23	9
24	6
25	16
26	4
27	14
28	11
29	7
30	12
31	15
32	9
33	11
34	3
35	13
36	8
37	18
38	11
39	17
40	19
41	3
42	12
43	7
44	8
45	8
46	10
47	1
48	1
49	14
50	18
51	4
52	10
53	2
54	4
55	10
56	18
57	9
58	10
59	16
60	11
61	7
62	12
63	3
64	5
65	15
66	13
67	12
68	14
69	12
70	18
71	7
72	8
73	1
74	17
75	6
76	9
77	13
78	9
79	7
80	11
81	11
82	7
83	17
84	1
85	1
86	8
87	12
88	18
89	12
90	19
91	16
92	4
93	7
94	17
95	18
96	8
97	5
98	10
99	17
100	9
101	19
102	19
103	16
104	7
105	17
106	12
107	14
108	17
109	13
110	15
111	8
112	7
113	18
114	6
115	8
116	2
117	18
118	16
119	11
120	12
121	6
122	2
123	15
124	13
125	9
126	14
127	12
128	17
129	10
130	6
131	13
132	16
133	11
134	12
135	19
136	14
137	9
138	19
139	15
140	18
141	14
142	1
143	3
144	10
145	2
146	14
147	5
148	16
149	5
150	6
151	4
152	19
153	2
154	5
155	9
156	14
157	17
158	18
159	6
160	14
161	15
162	8
163	16
164	8
165	11
166	15
167	9
168	11
169	14
170	17
171	16
172	5
173	8
174	16
175	3
176	2
177	18
178	4
179	7
180	17
181	14
182	2
183	19
184	8
185	8
186	10
187	6
188	16
189	9
190	13
191	16
192	6
193	2
194	12
195	7
196	10
197	12
198	8
199	6
200	8
;
param kiSzallitasiHatarIdo:=
1	17
2	17
3	19
4	7
5	19
6	13
7	19
8	18
9	19
10	12
11	15
12	14
13	20
14	19
15	15
16	12
17	19
18	20
19	20
20	11
21	12
22	6
23	19
24	13
25	16
26	18
27	15
28	12
29	10
30	13
31	18
32	20
33	12
34	4
35	20
36	9
37	20
38	19
39	20
40	20
41	16
42	16
43	16
44	17
45	12
46	11
47	15
48	3
49	16
50	19
51	7
52	13
53	11
54	12
55	10
56	18
57	19
58	17
59	16
60	19
61	13
62	16
63	9
64	15
65	18
66	13
67	20
68	16
69	13
70	20
71	18
72	14
73	6
74	20
75	12
76	13
77	18
78	11
79	16
80	16
81	15
82	12
83	20
84	12
85	13
86	19
87	17
88	20
89	20
90	19
91	20
92	8
93	11
94	17
95	19
96	9
97	12
98	12
99	18
100	20
101	20
102	19
103	19
104	7
105	17
106	16
107	19
108	17
109	13
110	18
111	17
112	16
113	19
114	9
115	17
116	4
117	18
118	18
119	14
120	14
121	9
122	2
123	17
124	14
125	13
126	19
127	15
128	20
129	17
130	7
131	20
132	18
133	18
134	17
135	19
136	19
137	20
138	20
139	19
140	19
141	19
142	5
143	12
144	10
145	14
146	19
147	9
148	16
149	6
150	15
151	13
152	19
153	8
154	8
155	12
156	18
157	17
158	19
159	8
160	18
161	18
162	12
163	20
164	19
165	18
166	19
167	9
168	17
169	19
170	19
171	16
172	13
173	17
174	18
175	7
176	16
177	18
178	14
179	14
180	18
181	17
182	4
183	20
184	11
185	19
186	16
187	8
188	17
189	12
190	14
191	20
192	13
193	18
194	18
195	14
196	14
197	20
198	12
199	20
200	16
;
param profit:=
1	55
2	36
3	17
4	53
5	38
6	48
7	14
8	98
9	21
10	41
11	61
12	24
13	78
14	11
15	17
16	63
17	79
18	51
19	45
20	73
21	95
22	26
23	39
24	84
25	54
26	88
27	86
28	31
29	78
30	75
31	52
32	71
33	64
34	73
35	24
36	30
37	15
38	12
39	75
40	43
41	66
42	86
43	51
44	21
45	96
46	90
47	34
48	10
49	34
50	44
51	70
52	60
53	17
54	100
55	12
56	55
57	52
58	77
59	64
60	83
61	25
62	42
63	89
64	42
65	82
66	66
67	27
68	78
69	72
70	89
71	81
72	69
73	95
74	28
75	85
76	61
77	38
78	65
79	54
80	52
81	23
82	16
83	28
84	27
85	32
86	85
87	97
88	94
89	34
90	40
91	18
92	61
93	11
94	22
95	33
96	38
97	78
98	28
99	94
100	20
101	85
102	24
103	79
104	94
105	78
106	54
107	82
108	24
109	71
110	64
111	51
112	19
113	53
114	11
115	35
116	73
117	44
118	59
119	55
120	54
121	28
122	41
123	36
124	62
125	36
126	78
127	13
128	77
129	69
130	16
131	98
132	11
133	59
134	62
135	88
136	77
137	71
138	68
139	100
140	32
141	34
142	11
143	52
144	36
145	99
146	42
147	90
148	39
149	31
150	47
151	88
152	54
153	88
154	34
155	14
156	26
157	92
158	28
159	63
160	31
161	78
162	80
163	39
164	36
165	93
166	13
167	56
168	47
169	33
170	71
171	32
172	65
173	36
174	60
175	51
176	41
177	82
178	56
179	66
180	67
181	43
182	22
183	43
184	60
185	51
186	88
187	65
188	19
189	94
190	31
191	27
192	33
193	49
194	10
195	63
196	53
197	52
198	74
199	78
200	51
;
param celAllomas:=
1	5
2	1
3	3
4	6
5	4
6	1
7	1
8	4
9	5
10	4
11	4
12	5
13	2
14	6
15	1
16	5
17	2
18	6
19	6
20	3
21	2
22	5
23	5
24	3
25	5
26	6
27	3
28	2
29	6
30	1
31	5
32	5
33	6
34	2
35	3
36	1
37	1
38	6
39	4
40	1
41	3
42	1
43	2
44	3
45	4
46	4
47	6
48	1
49	6
50	1
51	5
52	5
53	2
54	5
55	4
56	6
57	5
58	1
59	3
60	2
61	2
62	2
63	1
64	3
65	3
66	4
67	5
68	6
69	6
70	3
71	4
72	4
73	6
74	5
75	6
76	3
77	4
78	5
79	3
80	1
81	6
82	6
83	2
84	1
85	6
86	4
87	5
88	2
89	6
90	3
91	2
92	1
93	6
94	4
95	1
96	2
97	4
98	2
99	5
100	3
101	5
102	3
103	4
104	2
105	6
106	4
107	2
108	4
109	5
110	1
111	1
112	6
113	5
114	2
115	6
116	5
117	2
118	3
119	3
120	5
121	2
122	2
123	5
124	2
125	4
126	3
127	1
128	1
129	4
130	3
131	6
132	4
133	5
134	6
135	1
136	5
137	6
138	2
139	2
140	1
141	3
142	1
143	6
144	6
145	2
146	6
147	3
148	1
149	3
150	2
151	3
152	6
153	1
154	1
155	3
156	6
157	6
158	6
159	1
160	2
161	2
162	5
163	3
164	2
165	6
166	1
167	3
168	3
169	5
170	6
171	6
172	3
173	1
174	5
175	4
176	5
177	3
178	5
179	1
180	6
181	5
182	5
183	2
184	1
185	1
186	3
187	4
188	6
189	5
190	4
191	6
192	5
193	3
194	3
195	4
196	5
197	4
198	5
199	5
200	2
;

